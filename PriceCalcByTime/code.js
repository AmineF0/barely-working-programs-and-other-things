var data , touFile, csvFile, finished, valueSv ; const weekDaySet = ["mon","tue","wed","thu","fri","sat","sun"]; const monthsSet = ["January","February","March","April","May","June","July","August","September","October","November","December"]; const special_week_days_template={ "name":null, "day_periods":[], "week_day":{ "mon":false, "tue":false, "wed":false, "thu":false, "fri":false, "sat":false, "sun":false } }; const special_days_template={ "name":"", "date":null, "day_periods":[], "months":{ "January":false, "February":false, "March":false, "April":false, "May":false, "June":false, "July":false, "August":false, "September":false, "October":false, "November":false, "December":false }, "year":null, "week_day":{ "mon":false, "tue":false, "wed":false, "thu":false, "fri":false, "sat":false, "sun":false } }; const day_periods_template={ "start_time":null, "end_time":null, "type":null }; const types_template={ "name":null, "price":0, "color":"#000000" } ; const period_template = { "name":null, "start_date":null, "end_date":null, "day_periods":[], "special_days":[], "special_week_days":[] } ;const data_template = { "name":"name", "types":[ { "name":"default", "price":0, "color":"#eeeeee" } ], "periods":[ { "name":"default", "start_date":null, "end_date":null, "day_periods":[], "special_days":[], "special_week_days":[] } ] } ;function treeForm(){  var toggler = document.getElementsByClassName("caret"); var i;  for (i = 0; i < toggler.length; i++) { toggler[i].addEventListener("click", function() { this.parentElement.querySelector(".nested").classList.toggle("active"); this.classList.toggle("caret-down"); }); }  } function treeFormI(){  var toggler = document.getElementsByClassName("caretI"); var i;  for (i = 0; i < toggler.length; i++) { toggler[i].addEventListener("click", function() { this.parentElement.querySelector(".nestedI").classList.toggle("activeI"); this.classList.toggle("caret-downI"); }); }  } function setName(){  document.getElementById("myUL").innerHTML = '<li><span class="caretI"></span><strong>'+data.name+'</strong><span id="name" class="select"></span><ul id="tree" class="nestedI"><li><span class="caretI"></span><span id="periodsName" class="select"><strong>Periods</strong></span><ul id="periods" class="nestedI"></ul></li><li><span class="caretI"></span><span id="typesTitle" class="select"></span><ul id="treeTyp" class="nestedI"></ul></li></ul></li>'; document.getElementById("name").addEventListener("click", function(){ setContainer();  });  } function setTypes(){  document.getElementById("typesTitle").innerHTML += '<strong>Daily Period Types</strong>'; document.getElementById("typesTitle").addEventListener("click", function(){ document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Create New Type :</strong></h2><label for="nameGroup">Name : </label><input type="text" id="nameGroup" name="name"  required><br><br><label for="price">Price : </label><input type="number" id="Price" name="price" required><br><br><label for="color">Color : </label><input type="color" id="Color" name="color"  required><br><br><input type="button" name="button" value="ADD type" onclick="addType()"/></div>'; });  } function fillTree(){  var text = ""; document.getElementById("periods").innerHTML = text; $.each(data.periods, function(i,periods){ text = '<li><span class="caret"></span><span class="select" id="'+i+'">'+periods.name+'</span>'+ '<ul class="nested">'+ '<li class="select" id="periods%'+i+'%day_periods">Day Periods</li>';  if(periods.special_days.length==0){ text += '<li class="select" id="periods%'+i+'%special_days">Special days</li>'; }else{ text += '<li ><span class="caret"></span><span class="select" id="periods%'+i+'%special_days">Special Days:</span>'+ '<ul class="nested">'; $.each(periods.special_days,function(n,special_days){ text += '<li class="select" id="periods%'+i+'%special_days%'+n+'">'+special_days.name+'</li>'; }); text += '</ul></li>'; }  if(periods.special_week_days.length==0){ text += '<li class="select" id="periods%'+i+'%special_week_days">Special week days</li>'; }else{ text +='<li ><span class="caret"></span><span class="select" id="periods%'+i+'%special_week_days">Special week days:</span>'+ '<ul class="nested">'; $.each(periods.special_week_days,function(n,special_week_days){ text += '<li class="select" id="periods%'+i+'%special_week_days'+n+'">'+special_week_days.name+'</li>'; }); text += '</ul></li>'; }  text += '</ul></li>';  document.getElementById("periods").innerHTML += text;  });   $.each(data.periods, function(i,periods){   document.getElementById(i).addEventListener("click", function(){    if(periods.name!="default")     document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Modify Period : '+periods.name+'</strong></h2><label for="nameGroup">Period name : </label><input type="text" id="nameGroup" value="'+periods.name+'" name="name" required><br><br><label for="startDate">Start Day :</label><input type="date" value="'+periods.start_date+'" id="startDate" required><br><br><label for="endDate">End Day :</label><input type="date" id="endDate" value="'+periods.end_date+'" required><br><br><input type="button" name="button" value="Modify" onclick="modifyFormPeriod('+i+')"/><input type="button" name="button" value="Remove" onclick="removeFormPeriod('+i+')" style="background-color:red;border : 1px solid grey;"/></div>'; }); document.getElementById('periods%'+i+'%special_days').addEventListener("click", function(){ document.getElementById("container").innerHTML = '<div style="height;98%;width:94%;padding:1% 3% 1% 3%;"><h2><strong>Create Special Day:</strong></h2><div><div style="float:left"><label for="nameGroup">Special day name : </label><input type="text" id="nameGroup" name="name" size="10" required></div><div style="float:right;padding-right:10%;"><label for="date">Day : </label><input type="number" id="date" name="date" min="0" max="31" step="1" required></div></div><br><br><label for="days"> Week days (will be concidered only in these days of the week):</label><fieldset id="days"><label for="mon"> Monday</label><input type="checkbox" id="mon" value="Monday"><label for="tue"> Tuesday</label><input type="checkbox" id="tue" value="Tuesday"><label for="wed"> Wednesday</label><input type="checkbox" id="wed" value="Wednesday"><label for="thu"> Thurday</label><input type="checkbox" id="thu" value="Thursday"><label for="fri"> Friday</label><input type="checkbox" id="fri" value="Friday"><label for="sat"> Saturday</label><input type="checkbox" id="sat" value="Saturday"><label for="sun"> Sunday</label><input type="checkbox" id="sun" value="Sunday"></fieldset><br><label for="months">Months (will be concidered only if the chosen day is in the range of the days of the month):</label><fieldset id="months"><label for="January"> January</label><input type="checkbox" id="January" value="January"><label for="February"> February</label><input type="checkbox" id="February" value="February"><label for="March"> March</label><input type="checkbox" id="March" value="March"><label for="April"> April</label><input type="checkbox" id="April" value="April"><label for="May"> May</label><input type="checkbox" id="May" value="May"><label for="June"> June</label><input type="checkbox" id="June" value="June"><label for="July"> July</label><input type="checkbox" id="July" value="July"><label for="August"> August</label><input type="checkbox" id="August" value="August"><label for="September"> September</label><input type="checkbox" id="September" value="September"><label for="October"> October</label><input type="checkbox" id="October" value="October"><label for="November"> November</label><input type="checkbox" id="November" value="November"><label for="December"> December</label><input type="checkbox" id="December" value="December"></fieldset><br><label for="Year">Repitition :</label><fieldset id="Year"><div><div style="float:left;height:21px;"><label for="Yearly">Yearly : </label><input type="checkbox" id="Yearly" value="Yearly" onclick="showYear()"></div><div id="yearCont" style="display:block;float:right;width:70%;"><label for="year">Year : <input type="number" min="0" id="year" ></div></div></fieldset><br><input id="periods%'+i+'%special_days" type="button" name="button" value="ADD to Tree" onclick="validateFormSpecialDay(this.id)"/></div>'; }); document.getElementById('periods%'+i+'%day_periods').addEventListener("click", function(){ fillDay('periods%'+i+'%day_periods'); }); document.getElementById('periods%'+i+'%special_week_days').addEventListener("click", function(){ document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Create New Week Days Group:</strong></h2><label for="nameGroup">special week days group name : </label><input type="text" id="nameGroup" name="name" required><br><br><label for="days">week days :</label><fieldset id="days"><label for="mon"> Monday</label><input type="checkbox" id="mon" value="Monday"><label for="tue"> Tuesday</label><input type="checkbox" id="tue" value="Tuesday"><label for="wed"> Wednesday</label><input type="checkbox" id="wed" value="Wednesday"><label for="thu"> Thurday</label><input type="checkbox" id="thu" value="Thursday"><label for="fri"> Friday</label><input type="checkbox" id="fri" value="Friday"><label for="sat"> Saturday</label><input type="checkbox" id="sat" value="Saturday"><label for="sun"> Sunday</label><input type="checkbox" id="sun" value="Sunday"></fieldset><br><input id="periods%'+i+'%special_week_days" type="button" name="button" value="ADD to Tree" onclick="validateFormSpecialWeekDays(this.id)"/></div>'; }); $.each(periods.special_days,function(n,special_days){ document.getElementById('periods%'+i+'%special_days%'+n).addEventListener("click", function(){     document.getElementById("container").innerHTML = '<div style="height;98%;width:94%;padding:1% 3% 1% 3%;"><h2><strong>Modify Special Day : '+special_days.name+'</strong></h2><div><div style="float:left"><label for="nameGroup">Special day name : </label><input type="text" id="nameGroup" name="name" size="10" value="'+special_days.name+'" required></div><div style="float:right;padding-right:10%;"><label for="date">Day : </label><input type="number" id="date" name="date" min="0" max="31" step="1" value="'+special_days.date+'" required></div></div><br><br><label for="days"> Week days (will be concidered only in these days of the week):</label><fieldset id="days"><label for="mon"> Monday</label><input type="checkbox" id="mon" value="Monday"><label for="tue"> Tuesday</label><input type="checkbox" id="tue" value="Tuesday"><label for="wed"> Wednesday</label><input type="checkbox" id="wed" value="Wednesday"><label for="thu"> Thurday</label><input type="checkbox" id="thu" value="Thursday"><label for="fri"> Friday</label><input type="checkbox" id="fri" value="Friday"><label for="sat"> Saturday</label><input type="checkbox" id="sat" value="Saturday"><label for="sun">Sunday</label><input type="checkbox" id="sun" value="Sunday"></fieldset><br><label for="months">Months (will be concidered only if the chosen day is in the range of the days of the month):</label><fieldset id="months"><label for="January"> January</label><input type="checkbox" id="January" value="January"><label for="February"> February</label><input type="checkbox" id="February" value="February"><label for="March"> March</label><input type="checkbox" id="March" value="March"><label for="April"> April</label><input type="checkbox" id="April" value="April"><label for="May"> May</label><input type="checkbox" id="May" value="May"><label for="June"> June</label><input type="checkbox" id="June" value="June"><label for="July"> July</label><input type="checkbox" id="July" value="July"><label for="August"> August</label><input type="checkbox" id="August" value="August"><label for="September"> September</label><input type="checkbox" id="September" value="September"><label for="October"> October</label><input type="checkbox" id="October" value="October"><label for="November"> November</label><input type="checkbox" id="November" value="November"><label for="December"> December</label><input type="checkbox" id="December" value="December"></fieldset><br><label for="Year">Repitition :</label><fieldset id="Year"><div><div style="float:left;height:21px;"><label for="Yearly">Yearly : </label><input type="checkbox" id="Yearly" value="Yearly" onclick="showYear()"></div><div id="yearCont" style="display:block;float:right;width:70%;"><label for="year">Year : <input type="number" min="0" id="year" ></div></div></fieldset><br><input type="button" name="button" value="Go to Day Periods" id="periods%'+i+'%special_days%'+n+'%day_periods" onclick="fillDay(this.id)"/> <input id="periods%'+i+'%special_days%'+n+'" type="button" name="button" value="Modify" onclick="modifyFormSpecialDay(this.id)"/> <input type="button" name="button" id="periods%'+i+'%special_days%'+n+'" value="Remove" onclick="removeFormSpecialDay(this.id)" style="background-color:red;border:1px solid grey;"/></div>';     $.each(special_days.week_day, function(i , value){      document.getElementById(i).checked = value;     });     $.each(special_days.months, function(i , value){      document.getElementById(i).checked = value;     });     if(special_days.year == null){      document.getElementById("Yearly").checked = true;      showYear();     }     else document.getElementById("year").value = special_days.year;    }); }); $.each(periods.special_week_days,function(n,special_week_days){ document.getElementById('periods%'+i+'%special_week_days'+n).addEventListener("click", function(){     document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Create New Week Days Group:</strong></h2><label for="nameGroup">special week days group name : '+special_week_days.name+'</label><input type="text" id="nameGroup" name="name" value="'+special_week_days.name+'" required><br><br><label for="days">week days :</label><fieldset id="days"><label for="mon"> Monday</label><input type="checkbox" id="mon" value="Monday"><label for="tue"> Tuesday</label><input type="checkbox" id="tue" value="Tuesday"><label for="wed"> Wednesday</label><input type="checkbox" id="wed" value="Wednesday"><label for="thu"> Thursday</label><input type="checkbox" id="thu" value="Thursday"><label for="fri"> Friday</label><input type="checkbox" id="fri" value="Friday"><label for="sat"> Saturday</label><input type="checkbox" id="sat" value="Saturday"><label for="sun"> Sunday</label><input type="checkbox" id="sun" value="Sunday"></fieldset><br><input type="button" name="button" value="Go to Day Periods" id="periods%'+i+'%special_week_days%'+n+'%day_periods" onclick="fillDay(this.id)"/> <input id="periods%'+i+'%special_week_days%'+n+'" type="button" name="button" value="Modify" onclick="modifyFormSpecialWeekDays(this.id)"/> <input type="button" name="button" id="periods%'+i+'%special_week_days%'+n+'" value="Remove" onclick="removeFormSpecialDay(this.id)" style="background-color:red;border:1px solid grey;"/></div>';     $.each(special_week_days.week_day, function(i , value){      document.getElementById(i).checked = value;     });    }); }); });  document.getElementById("periodsName").addEventListener("click" ,function(){ document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Create Period:</strong></h2><label for="nameGroup">Period name : </label><input type="text" id="nameGroup" name="name" required><br><br><label for="startDate">Start Day :</label><input type="date" id="startDate" required><br><br><label for="endDate">End Day :</label><input type="date" id="endDate" required><br><br><input type="button" name="button" value="ADD Period to Tree" onclick="validateFormPeriod()"/></div>'; }); fillTypes(); treeForm();  } function fillTypes(){  document.getElementById("treeTyp").innerHTML = "" ;  $.each(data.types, function(i,types){  document.getElementById("treeTyp").innerHTML += '<li id="types%'+i+'" class="select">'+types.name+'</li>';  });  $.each(data.types, function(i,types){  document.getElementById("types%"+i).addEventListener("click", function(){ var tex = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Modify '+data.types[i].name+' Type :</strong></h2><label for="nameGroup">Name : </label><input type="text" id="TypeName" name="name" value="'+data.types[i].name+'" required /><br><br><label for="price">Price : </label><input type="number" id="Price" name="price" value="'+data.types[i].price+'" required /><br><br><label for="color">Color : </label><input type="color" id="Color" name="color" value="'+data.types[i].color+'" required /><br><br><input id="types%'+i+'" type="button" name="button" value="Modify" onclick="modifyType(this.id)" />'; if(types.name!="default"){ tex += '<input id="types%'+i+'" type="button" name="button" value="Delete" onclick="removeType(this.id)" style="background-color:red;border: 1px solid grey;"/>'; } document.getElementById("container").innerHTML = tex+'</div>'; });  });  } function validateFormSpecialWeekDays(clicked_id){  var name = document.getElementById("nameGroup").value;  if(name==""){ alert("name is a required field"); return; }  if(name.includes("%")){ alert("name can not include the character : %"); return; }  var array = clone(special_week_days_template);  var id = clicked_id.split('%'); var item = clone(data); $.each(id, function(i , value){ item = item[value]; });  array.name = name; array.week_day.mon = document.getElementById("mon").checked; array.week_day.tue = document.getElementById("tue").checked; array.week_day.wed = document.getElementById("wed").checked; array.week_day.thu = document.getElementById("thu").checked; array.week_day.fri = document.getElementById("fri").checked; array.week_day.sat = document.getElementById("sat").checked; array.week_day.sun = document.getElementById("sun").checked;  var valid = true; $.each(item, function(i , group){ if(group.name==name ){ alert("the name you choose is dublicated"); valid = false; return false; } $.each(group.week_day , function(n , day){ if(day==array.week_day[n] && day==true){ alert("the day "+(n)+" of the week was already used in another special week days"); valid = false; return false; } }); });  if(valid){ alert("action finished successfully"); data[id[0]][id[1]][id[2]].push(array); }  fillTree();  } function modifyFormSpecialWeekDays(clicked_id){  var name = document.getElementById("nameGroup").value;  if(name==""){ alert("name is a required field"); return; }  if(name.includes("%")){ alert("name can not include the character : %"); return; }  var array = clone(special_week_days_template);  var id = clicked_id.split('%'); var item = data;  for(n=0 ; n<id.length-1 ;n++)   item = item[id[n]];  array.name = name; array.week_day.mon = document.getElementById("mon").checked; array.week_day.tue = document.getElementById("tue").checked; array.week_day.wed = document.getElementById("wed").checked; array.week_day.thu = document.getElementById("thu").checked; array.week_day.fri = document.getElementById("fri").checked; array.week_day.sat = document.getElementById("sat").checked; array.week_day.sun = document.getElementById("sun").checked;  var valid = true; $.each(item, function(i , group){   if(i == id[id.length-1])    return true; if(group.name==name ){ alert("the name you choose is dublicated"); valid = false; return false; } $.each(group.week_day , function(n , day){ if(day==array.week_day[n] && day==true){ alert("the day "+(n)+" of the week was already used in another special week days"); valid = false; return false; } }); });    if(!valid) return;   alert("action finished successfully");  item[id[id.length-1]]=array; fillTree();  } function validateFormSpecialDay(clicked_id){  var name = document.getElementById("nameGroup").value; var date = document.getElementById("date").value;  if(name==""){ alert("name is a required field"); return; }  if(name.includes("%")){ alert("name can not include the character : %"); return; }  if(date==""){ alert("date is a required field"); return; }  if(!document.getElementById("Yearly").checked && document.getElementById("year").value==""){ alert("yearly is checked and no value was given"); return; }  var array = clone(special_days_template);  var id = clicked_id.split('%'); var item = clone(data); $.each(id, function(i , value){ item = item[value]; });  array.name = name; array.date = date; array.week_day.mon = document.getElementById("mon").checked; array.week_day.tue = document.getElementById("tue").checked; array.week_day.wed = document.getElementById("wed").checked; array.week_day.thu = document.getElementById("thu").checked; array.week_day.fri = document.getElementById("fri").checked; array.week_day.sat = document.getElementById("sat").checked; array.week_day.sun = document.getElementById("sun").checked; array.months.January = document.getElementById("January").checked; array.months.February = document.getElementById("February").checked; array.months.March = document.getElementById("March").checked; array.months.April = document.getElementById("April").checked; array.months.May = document.getElementById("May").checked; array.months.June = document.getElementById("June").checked; array.months.July = document.getElementById("July").checked; array.months.August = document.getElementById("August").checked; array.months.September = document.getElementById("September").checked; array.months.October = document.getElementById("October").checked; array.months.November = document.getElementById("November").checked; array.months.December = document.getElementById("December").checked; if(!document.getElementById("Yearly").checked) array.year = document.getElementById("year").value;  var valid = true; $.each(item, function(i , group){ if(group.name==name){ alert("the name you choose is dublicated"); valid = false; return false; } if(group.date==date){ if(group.year==null || array.year==null || array.year==group.year){ $.each(group.months , function(m , month){ if(month && array.months[m]){ $.each(group.week_day , function(n , day){ if(day && array.week_day[n]){ if(group.year == null){ alert("The days "+n+" of the month "+m+" of the all years were already used in another special day"); }else{ alert("The day "+n+" of the month "+m+" of the year "+group.year+" was already used in another special day"); } valid = false; return false; } }); } if(!valid) return false; }); if(!valid) return false; } } });  if(valid){ alert("action finished successfully"); data[id[0]][id[1]][id[2]].push(array); }  fillTree();  } function modifyFormSpecialDay(clicked_id){  var name = document.getElementById("nameGroup").value; var date = document.getElementById("date").value;  if(name==""){ alert("name is a required field"); return; }  if(name.includes("%")){ alert("name can not include the character : %"); return; }  if(date==""){ alert("date is a required field"); return; }  if(!document.getElementById("Yearly").checked && document.getElementById("year").value==""){ alert("yearly is checked and no value was given"); return; }  var id = clicked_id.split('%'); var item = data;  for(n=0 ; n<id.length-1 ;n++)   item = item[id[n]];    var array = clone(special_days_template); array.name = name; array.date = date; array.week_day.mon = document.getElementById("mon").checked; array.week_day.tue = document.getElementById("tue").checked; array.week_day.wed = document.getElementById("wed").checked; array.week_day.thu = document.getElementById("thu").checked; array.week_day.fri = document.getElementById("fri").checked; array.week_day.sat = document.getElementById("sat").checked; array.week_day.sun = document.getElementById("sun").checked; array.months.January = document.getElementById("January").checked; array.months.February = document.getElementById("February").checked; array.months.March = document.getElementById("March").checked; array.months.April = document.getElementById("April").checked; array.months.May = document.getElementById("May").checked; array.months.June = document.getElementById("June").checked; array.months.July = document.getElementById("July").checked; array.months.August = document.getElementById("August").checked; array.months.September = document.getElementById("September").checked; array.months.October = document.getElementById("October").checked; array.months.November = document.getElementById("November").checked; array.months.December = document.getElementById("December").checked; if(!document.getElementById("Yearly").checked) array.year = document.getElementById("year").value;  var valid = true; $.each(item, function(i , group){   if(i == id[id.length-1])    return true; if(group.name==name){ alert("the name you choose is dublicated"); valid = false; return false; } if(group.date==date){ if(group.year==null || array.year==null || array.year==group.year){ $.each(group.months , function(m , month){ if(month && array.months[m]){ $.each(group.week_day , function(n , day){ if(day && array.week_day[n]){ if(group.year == null){ alert("The days "+n+" of the month "+m+" of the all years were already used in another special day"); }else{ alert("The day "+n+" of the month "+m+" of the year "+group.year+" was already used in another special day"); } valid = false; return false; } }); } if(!valid) return false; }); if(!valid) return false; } } });  if(!valid) return;   alert("action finished successfully");  item[id[id.length-1]]=array; fillTree();  } function removeFormSpecialDay(clicked_id){   var id = clicked_id.split('%'); var item = data;  for(n=0 ; n<id.length-1 ;n++)   item = item[id[n]]; item.splice(id[id.length-1] , 1); alert("removal finished successfully"); fillTree();  setContainer();   } function clone(obj){ if(!obj) return obj;  let v; let obj2 = Array.isArray(obj) ? [] : {}; for(const k in obj){ v = obj[k]; obj2[k] = (typeof v === "object") ? clone(v) : v; }  return obj2; } function showYear(){ var check =document.getElementById("Yearly").checked; if(check==false) document.getElementById("yearCont").style.display = "block"; else document.getElementById("yearCont").style.display = "none";; } function addType(){  var name = document.getElementById("nameGroup").value; var price = document.getElementById("Price").value; var color = document.getElementById("Color").value;  if(name==""){ alert("name is a required field"); return; }  if(name.includes("%")){ alert("name can not include the character : %"); return; }  if(price==""){ alert("price is a required field"); return; }  var array = clone(types_template);  array.name = name; array.price = price; array.color = color;  var valid = true; $.each(data.types, function(i , group){ if(group.name==name){ alert("the name you choose is being used in another type"); valid = false; return false; } if(group.color==color){ alert("the color you choose is being used in another type"); valid = false; return false; } });  if(valid){ alert("action finished successfully"); data.types.push(array); }  fillTree();  } function removeType(clicked_id){  var id = clicked_id.split('%'); var item = data; for(n in id){ item = item[id[n]]; }  $.each(data.periods, function(i,periods){ for(n= periods.day_periods.length-1 ; n>=0 ; n--){ idem = periods.day_periods[n]; if(idem.type == item.name){ periods.day_periods.splice( n, 1); } } $.each(periods.special_week_days,function(n,special_week_days){ for(n= special_week_days.day_periods.length-1 ; n>=0 ; n--){ idem = special_week_days.day_periods[n]; if(idem.type == item.name){ special_week_days.day_periods.splice( n, 1); } } }); $.each(periods.special_days,function(n,special_days){ for(n= special_days.day_periods.length-1 ; n>=0 ; n--){ idem = special_days.day_periods[n]; if(idem.type == item.name){ special_days.day_periods.splice( n, 1); } } }); });  data.types.splice(data.types.indexOf(item),1); fillTree(); setContainer(); } function modifyType(clicked_id){  var name = document.getElementById("TypeName").value; var price = document.getElementById("Price").value; var color = document.getElementById("Color").value;  if(name==""){ alert("name is a required field"); return; } if(name.includes("%")){ alert("name can not include the character : %"); return; } if(price==""){ alert("price is a required field"); return; }  var array = clone(types_template); array.name = name; array.price = price; array.color = color;  var id = clicked_id.split('%'); var item = data; for(n in id){ item = item[id[n]]; }  var valid = true; $.each(data.types, function(i , group){ if(group.name==name && item.name != name){ alert("the name you choose is being used in another type"); valid = false; return false; } if(group.color==color && item.color != color){ alert("the color you choose is being used in another type"); valid = false; return false; } });  if(valid){ alert("modification finished successfully"); data[id[0]][id[1]]=array; }  } function fillDay(clicked_id){  var id = clicked_id.split('%'); var item = data; for(n=0; n<id.length-1; n++){ item = item[id[n]]; }  const dayTime = 23*60+59; document.getElementById("container").innerHTML = '<div id="temp"style="height:95%;width:90%;padding:2.5% 5% 2.5% 5%;"><style>.time{float:left;margin:4px 0 8px 0;height:14px;}.separate{border-top-right-radius:15px;border-top-left-radius:15px;margin:auto;width:4px;height:21px;background-color:black;}.datePanel{border-radius:5px;padding:3px 4px 3px 4px;font-size:10px;background-color:black;color:white;}.thE , .tdE{text-align:left;padding: 0px;}</style><h2 style="margin:10px;"><strong>Day Periods : '+item.name+'</strong></h2>';  item = item[id[id.length-1]]; var text = '';  var defaultType; $.each(data.types, function(n , types){ if(types.name=="default"){ defaultType = types; return false; } });  text += '<fieldset style="border-radius:15px;margin-bottom:10px;"><legend style="font-size:14px;">Legend</legend><table style="width:100%;padding"><tr class="trE"><th class="thE">Name</th><th class="thE">Price</th><th class="thE">Color</th></tr>'; $.each(data.types, function(i , type){ text += '<tr class="trE"><td class="tdE">'+type.name+'</td><td class="tdE">'+type.price+'</td><td class="tdE"><div style="height:10px;margin-bottom:4px;margin-top:4px;width:50px;background-color:'+type.color+';"></div></td></tr>'; }); text += '</table></fieldset>';  text += '<fieldset style="margin-bottom:10px;border-radius:15px;padding-bottom:5px;padding-left:18px;padding-right:18px;"><legend style="font-size:14px;">Day Partitions</legend><div style="height:42px;width:100%;position:relative;"><div style="position:absolute;background-color:'+defaultType.color+';width:100%;left:0;" class="time" id="" onclick=""></div><div style="top:0;left:-15px;position:absolute;"><div style="text-align:center;width:30px;height:38px;"><div class="separate" ></div><div class="datePanel">00:00</div></div></div><div style="top:0;left:calc(100% - 15px);position:absolute;"><div style="text-align:center;width:30px;height:38px;"><div class="separate" ></div><div class="datePanel">23:59</div></div></div>'; $.each(item , function(i , period){ var type; $.each(data.types , function(m, types){ if(types.name==period.type){ type = types; return false; } }); var start = period.start_time , end = period.end_time; var delai = end - start ; var begin = start*100/dayTime , ending = end*100/dayTime ;  text += '<div style="top:0;left:calc('+begin+'% - 15px);position:absolute;"><div style="text-align:center;width:30px;height:38px;"><div class="separate" ></div><div class="datePanel">'+transformTime(start)+'</div></div></div><div style="top:0;left:calc('+ending+'% - 15px);position:absolute;"><div style="text-align:center;width:30px;height:38px;"><div class="separate" ></div><div class="datePanel">'+transformTime(end)+'</div></div></div>'; }); $.each(item , function(i , period){ var type; $.each(data.types , function(m, types){ if(types.name==period.type){ type = types; return false; } }); var start = period.start_time , end = period.end_time; var delai = end - start ; var begin = start*100/dayTime , ending = end*100/dayTime ;  text += '<style>.num'+i+'{float:left;margin:4px 0 8px 0;height:14px;position:absolute;background-color:'+type.color+';width:'+(delai*100/dayTime)+'%;left:'+ begin +'%;}.num'+i+':hover{width:calc('+(delai*100/dayTime)+'% + 4px);left:calc('+ begin +'% - 3px);height:18px;margin:2px 0 6px 0;border:1px solid red;top:-1px;}</style><div class="num'+i+'" id="'+clicked_id+'%'+i+'" onclick="modificationPartitionBar(this.id)"></div>';   }); text += '</div></fieldset>';   text += '<fieldset style="border-radius:15px;margin-bottom:10px;"><legend style="font-size:14px;">Add new partition</legend><table><tr><td><label for="addbegin">Begin time : <input type="time" id="addbegin"/></td><td><label for="addend">End time : <input type="time" id="addend"/></td><td>Type : <select id="addType">'; $.each(data.types, function(i , type){ if(type.name!="default") text += '<option value="'+type.name+'">'+type.name+'</option>'; }); text += '</select></td><td><input value="ADD partition" type="button" onclick="addPartition(this.id)" id="'+clicked_id+'"/> </td></tr></table></fieldset>';  text += '<div id="modifBar"></div></div>'; document.getElementById("temp").innerHTML += text;  } function addPartition(clicked_id){  if(document.getElementById("addbegin").value == "" || document.getElementById("addend").value == "" || document.getElementById("addType").value == ""){ alert("you must fill all the fields.\nif you don't find any type consider making one."); return; }  var begin = transformTimeNum(document.getElementById("addbegin").value); var end = transformTimeNum(document.getElementById("addend").value); var type = document.getElementById("addType").value;  var id = clicked_id.split('%'); var item = data; for(n in id){ item = item[id[n]]; }  if(begin > end){ alert("end time can not be before the start time"); return; }  var valid = true; $.each(item , function(i , period){  if(period.start_time <= begin && period.end_time >= begin){ alert("the starting time is included in a used interval , consider changing the time or removing the original"); valid=false; return false; }  if(period.start_time <= end && period.end_time >= end){ alert("the ending time is included in a used interval , consider changing the time or removing the original"); valid=false; return false; }  }); if(valid == false) return ;  var array = clone(day_periods_template); array.start_time = begin; array.end_time = end; array.type = type;  item.push(array);  alert("action finished successfully"); fillDay(clicked_id); } function makeClockValidNumber(num){ if(num < 10) return "0"+""+num; return num; } function transformTime(num){ return makeClockValidNumber(((num/60) | 0))+":"+makeClockValidNumber(num%60); } function transformTimeNum(num){ var blocks = num.split(':'); return parseInt(blocks[0]*60) + parseInt(blocks[1]); } function modifyPartition(clicked_id){  if(document.getElementById("begin").value == "" || document.getElementById("end").value == "" || document.getElementById("addType").value == ""){ alert("you must fill all the fields.\nif you don't find any type consider making one."); return; }  var begin = transformTimeNum(document.getElementById("begin").value); var end = transformTimeNum(document.getElementById("end").value); var type = document.getElementById("sel").value;  var id = clicked_id.split('%'); var item = data; for(n=0 ; n<id.length-1 ; n++){ item = item[id[n]]; }  if(begin > end){ alert("end time can not be before the start time"); return; }  var valid = true; $.each(item , function(i , period){ if(i!=id[id.length-1] && period.start_time <= begin && period.end_time >= begin){ alert("the starting time is included in a used interval , consider changing the time or removing the original"); valid=false; return false; }  if(i!=id[id.length-1] && period.start_time <= end && period.end_time >= end){ alert("the ending time is included in a used interval , consider changing the time or removing the original"); valid=false; return false; }  }); if(valid == false) return ;  item[id[id.length-1]].start_time = begin; item[id[id.length-1]].end_time = end; item[id[id.length-1]].type = type; alert("action finished successfully"); clicked_id = id[0]; for(n=1 ; n < id.length-1 ; n++){ clicked_id += '%' + id[n]; } fillDay(clicked_id);  } function modificationPartitionBar(clicked_id){  var id = clicked_id.split('%'); var item = data; for(n in id){ item = item[id[n]]; }  var text = '<fieldset style="border-radius:15px;margin-bottom:10px;"><legend style="font-size:14px;">Modify partition</legend><table><tr><td><label for="begin">Begin time : <input type="time" value="'+transformTime(item.start_time)+'" id="begin"/></td><td><label for="end">End time : <input type="time" value="'+transformTime(item.end_time)+'" id="end"/></td><td>Type :<select id="sel">'; $.each(data.types, function(i , type){ if(type.name!="default") text += '<option value="'+type.name+'">'+type.name+'</option>'; }); text += '</select></td><td><input value=" Modify " type="button" onclick="modifyPartition(this.id)" id="'+clicked_id+'"/><input id="'+clicked_id+'" type="button" value="Remove" onclick="removePartition(this.id)" style="background-color:red;border: 1px solid grey;"/></td></tr></table></fieldset>';   document.getElementById("modifBar").innerHTML = text; document.getElementById("sel").value = item.type; } function removePartition(clicked_id){  var id = clicked_id.split('%'); var item = data; for(n=0 ; n<id.length-1 ; n++){ item = item[id[n]]; }  item.splice( id[id.length-1], 1);  alert("action finished successfully"); clicked_id = id[0]; for(n=1 ; n < id.length-1 ; n++){ clicked_id += '%' + id[n]; } fillDay(clicked_id);  } function setContainer(){ document.getElementById("container").innerHTML = '<div style="padding:7%"><strong>TOU setting program :</strong><br><br>1- periods : it is a time period which his name , date of start and end are defined by the user, each period has its own properties.<br>---> default : a default-added period , it designs the time undesigned in any other user-added period.<br>2- Day Period: it is a time(day) period which designs multipl day periods with a defined type. it help to divide day parts.<br>3- Special Days: it is a special day of the month , the user defines how often it is repeated : months of repetition + the days of the week that they will apply if the day coincide with them + yearly repeated or year specified. this group has a day period built in.<br>4- Special Week Days: this defines the special week days (ex: saturday + sunday are the week-end which is special week days), it as a built in day periods.<br><------- P.S: if a sepcial week day coincide with a special day , the special day will be used -------><br>5- Types: this is a set of types global for all the periods of the TOU , each type define the name of a type , the price of its use , and the color which will be designed with in the day period timeline.</div>'; } function validateFormPeriod(){  var name = document.getElementById("nameGroup").value; var start = document.getElementById("startDate").value; var end = document.getElementById("endDate").value;  if(name == "" || start == "" || end == ""){ alert("all field must be filled"); return; }  if(new Date(end) - new Date(start) < 0){ alert("end date can not precede the start date"); return; }  var valid = true; $.each(data.periods , function(i , period){  if(period.name == name){ alert("the name you chose is used by another period"); valid=false; return false; }  if(period.start_date == null && period.end_date == null) return true;  if(new Date(period.start_date) -new Date( start)<= 0 && new Date(period.end_date) - new Date(start) >= 0){ alert("the starting time is included in a used interval of another period, consider changing the time or removing the original"); valid=false; return false; }  if(new Date(period.start_date) - new Date(end) <=0 && new Date(period.end_date) - new Date(end) >=0){ alert("the ending time is included in a used interval of another period , consider changing the time or removing the original"); valid=false; return false; }  }); if(valid == false) return ;  var period = clone(period_template); period.name = name; period.start_date= start; period.end_date= end;  data.periods.push(period);  alert("period added successfully"); fillTree(); } function modifyFormPeriod(clicked_id){  var name = document.getElementById("nameGroup").value; var start = document.getElementById("startDate").value; var end = document.getElementById("endDate").value;  if(name == "" || start == "" || end == ""){ alert("all field must be filled"); return; }  if(new Date(end) - new Date(start) < 0){ alert("end date can not precede the start date"); return; }  var periods = data.periods[clicked_id]; var valid = true; $.each(data.periods , function(i , period){      if(periods.name == period.name)    return true;  if(period.name == name){ alert("the name you chose is used by another period"); valid=false; return false; }  if(period.start_date == null && period.end_date == null) return true;  if(new Date(period.start_date) -new Date( start)<= 0 && new Date(period.end_date) - new Date(start) >= 0){ alert("the starting time is included in a used interval of another period, consider changing the time or removing the original"); valid=false; return false; }  if(new Date(period.start_date) - new Date(end) <=0 && new Date(period.end_date) - new Date(end) >=0){ alert("the ending time is included in a used interval of another period , consider changing the time or removing the original"); valid=false; return false; }  }); if(valid == false) return ;  periods.name = name; periods.start_date= start; periods.end_date= end;   alert("modification finished successfully"); fillTree(); } function removeFormPeriod(clicked_id){  data.periods.splice(clicked_id , 1); alert("removal finished successfully"); fillTree();  setContainer();   } function readFile(){    var file = document.getElementById("file").files[0];  var reader = new FileReader(); if(file === undefined){ alert("insert a valid file"); return; }   reader.addEventListener('load', function(e){   var text = e.target.result;   data = JSON.parse(text); setName(); setTypes(); fillTree(); treeFormI(); setContainer();  });    reader.addEventListener('error', function(){   alert("Error : Echec while reading");  });   reader.readAsText(file); } function saveFile(){ if(data === undefined){ alert("load file first"); return; }   var a = document.createElement("a");  var file = new Blob([JSON.stringify(data)],{type: 'text/plain'});  a.href = URL.createObjectURL(file);  a.download = data.name+'.json';  a.click(); } function setJSONname(){  document.getElementById("container").innerHTML = '<div style="height;80%;width:80%;padding:10% 10% 10% 10%;"><h2><strong>Set New File Name :</strong></h2><label for="nameGroup">Name : </label><input type="text" id="nameGroup" name="name"  required><br><br><input type="button" name="button" value="Set Name" id="setName"/></div>';  document.getElementById("setName").addEventListener("click",function(){  var name = document.getElementById("nameGroup").value; if(nameGroup == ""){ alert("name must have a value"); return; }  data = clone(data_template); data.name = name; setName(); setTypes(); fillTree(); treeFormI(); setContainer();  });  } function CSVToArray( strData, strDelimiter ){ strDelimiter = (strDelimiter || ","); var objPattern = new RegExp( ( "(\\" + strDelimiter + "|\\r?\\n|\\r|^)" +  "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +  "([^\"\\" + strDelimiter + "\\r\\n]*))" ), "gi" );   var arrData = [[]]; var arrMatches = null; while (arrMatches = objPattern.exec( strData )){ var strMatchedDelimiter = arrMatches[ 1 ];  if ( strMatchedDelimiter.length && (strMatchedDelimiter != strDelimiter) ){ arrData.push( [] ); }  if (arrMatches[ 2 ]){  var strMatchedValue = arrMatches[ 2 ].replace( new RegExp( "\"\"", "g" ), "\"" );  } else { var strMatchedValue = arrMatches[ 3 ]; } arrData[ arrData.length - 1 ].push( strMatchedValue ); } return( arrData ); } function getFile(name){ var file = document.getElementById(name).files[0]; var reader = new FileReader(); if(file === undefined){ alert("insert a valid file"); return; } reader.addEventListener('load', function(e){ if(name == "TOU") touFile = JSON.parse(e.target.result); else if(name == "CSV") csvFile = CSVToArray(e.target.result , ","); finished--; if(finished==0){ if(touFile == null || csvFile == null)  return; if(csvFile[csvFile.length-1] == "") csvFile.pop();  for(var n=0; n<csvFile[0].length;n++){ if(isValidDate(n)){ document.getElementById("date").innerHTML += '<option value="'+csvFile[0][n]+'">'+csvFile[0][n]+'</options>'; } if(isValidNum(n)){ document.getElementById("value").innerHTML += '<option value="'+csvFile[0][n]+'">'+csvFile[0][n]+'</options>';  } }  document.getElementById("options").style.display = "block" ; document.getElementById("typeSub").style.display = "inline" ; } }); reader.addEventListener('error', function(){ alert("Error : Echec while reading"); finished--; }); finished++; reader.readAsText(file); } function readFiles(){ finished = 0; document.getElementById("date").innerHTML = ''; document.getElementById("value").innerHTML = ''; document.getElementById("options").style.display = "none" ; document.getElementById("typeSub").style.display = "none" ; getFile("TOU"); getFile("CSV"); } function isValidDate(type){ for(var n=1; n < csvFile.length; n++){ if(new Date(csvFile[n][type]) == "Invalid Date" || new Date(csvFile[n][type]) == "NaN"){ return false; } } return true; } function isValidNum(type){ for(var n=1; n < csvFile.length; n++){ if(isNaN(csvFile[n][type]) && !isFinite(csvFile[n][type])){ return false; } } return true; } function processData(){ var dateS = document.getElementById("date").selectedOptions[0]; valueS = document.getElementById("value").selectedOptions[0]; if(dateS == null || valueS == null){ alert("a value must be assigned, check if the CSV file joined contains a number and date column."); return; } var date = dateS.value; valueSv = valueS.value; var csv = [[],[],[]]; for(var n = 0 ; n < csvFile[0].length ; n++){ if(csvFile[0][n] == date) for(var y = 1 ; y < csvFile.length ; y++) csv[0].push(csvFile[y][n]); if(csvFile[0][n] == valueSv) for(var y = 1 ; y < csvFile.length ; y++) csv[1].push(csvFile[y][n]); } generate(csv , touFile); } function generate(data , tou){ var periods = {}; for(var n = 0 ; n < data[0].length ; n++){ var date = new Date(data[0][n]); var value = data[1][n]; data[2][n] = findDateInTou(date , tou , value); } process(data); } function findDateInTou(date , tou, value){ var info = {};  $.each(tou.periods , function(i , period){ if(period.start_date == null && period.end_date == null) return true; if(new Date(period.start_date) -new Date( date) <= 0 && new Date(period.end_date) - new Date(date) >= 0){ info.period = period.name; Object.assign(info , findDateInPeriod(date , period)); return false; } });  if(info.period == undefined){ info.period = "default"; Object.assign(info ,  findDateInPeriod(date ,  tou.periods[0])); } info.price = value * findPeriodInTou(info.type);  return info; } function findPeriodInTou(type){ var result = 0; $.each(touFile.types , function(i, Dtype){ if(type==Dtype.name){ result = parseFloat(Dtype.price); } }); return result; } function findDateInPeriod(date , period){ var found = false, info = {}; $.each(period.special_days , function(i , group){ if(group.date == date.getDate() && (group.year == null || group.year == date.getFullYear()) && group.months[monthsSet[date.getMonth()]] && group.week_day[weekDaySet[date.getDay()]]){ found = true; info.subPeriod = "Special Day : "+ group.name; Object.assign(info , findDateInDayPeriod(date , group)); } }); if(found) return info;  $.each(period.special_week_days , function(i , group){ if(group.week_day[weekDaySet[date.getDay()]]){ found = true; info.subPeriod ="Special Week Day : "+ group.name; Object.assign(info , findDateInDayPeriod(date , group)); } }); if(found) return info;  info.subPeriod= "default"; Object.assign(info , findDateInDayPeriod(date , touFile.periods[0])); return info; } function findDateInDayPeriod(date , period){ var found = false, info = {}, time = date.getHours()*60 + date.getMinutes(); $.each(period.day_periods , function(i , group){ if(group.start_time <= time && group.end_time >= time){ found = true; info.type = group.type; } });   if(!found) info.type = "default"; return info; } function process(data){  var periods = {per:{},sum:0,value:0}; $.each(data[2] , function(i, cell){ if(periods.per[cell.period]==undefined){ periods.per[cell.period] = {}; periods.per[cell.period].per = {}; } else if(periods.per[cell.period].per[cell.subPeriod] == undefined){ periods.per[cell.period].per[cell.subPeriod] = {}; periods.per[cell.period].per[cell.subPeriod].per = {}; periods.per[cell.period].per[cell.subPeriod].per[cell.type] = {}; periods.per[cell.period].per[cell.subPeriod].per[cell.type].price = cell.price; periods.per[cell.period].per[cell.subPeriod].per[cell.type].value = parseFloat(data[1][i]); } else if (periods.per[cell.period].per[cell.subPeriod].per[cell.type]==undefined){ periods.per[cell.period].per[cell.subPeriod].per[cell.type] = {}; periods.per[cell.period].per[cell.subPeriod].per[cell.type].price = cell.price; periods.per[cell.period].per[cell.subPeriod].per[cell.type].value = parseFloat(data[1][i]); } else{ periods.per[cell.period].per[cell.subPeriod].per[cell.type].price += cell.price; periods.per[cell.period].per[cell.subPeriod].per[cell.type].value += parseFloat(data[1][i]); } });  $.each(periods.per , function (i , period){ var sumS = 0 , valueS =0; $.each(period.per, function (i , subPeriod){ var sumT =0, valueT=0; $.each(subPeriod.per , function (i , type){ sumT += type.price; valueT += type.value }); subPeriod.sum = sumT; subPeriod.value = valueT; sumS += sumT; valueS += valueT; valueT=0; sumT=0; }); period.sum = sumS; period.value = valueS; periods.sum += sumS; periods.value += valueS; sumS = 0; valueS = 0; }); represent(periods);  } function represent(per){  var html = '<div><table id="table" ><tr><th class="th" colspan="6">Price by time period</th></tr>'+'<tr><td style="background:white;width:8%;"></td><td style="padding-left:15px;border-bottom: 1px dotted blue;text-align:center;background-color:#77B6EA;font-weight:bold;width:72%;"  colspan="3">Period</td><td style="background-color:#77B6EA;border-bottom: 1px dotted blue;width:10%;text-align:center;font-weight:bold;">'+valueSv+'</td><td style="font-weight:bold;border-bottom: 1px dotted blue;width:10%;text-align:center;background-color:#77B6EA;">Price</td></tr>';  $.each(per.per , function(i, period){ html += '<tr name="'+i+'" id="'+i+'" onclick="showTablePart(this.id)" ><td style="background:white;width:8%;"></td><td colspan="3" style="width:72%;padding-left:15px;border-bottom: 1px dotted blue;">'+i+'</td><td style="border-bottom: 1px dotted blue;width:10%;text-align:center">'+period.sum.toFixed(2)+'</td><td style="border-bottom: 1px dotted blue;width:10%;text-align:center">'+period.value.toFixed(2)+'</td></tr>'; $.each(period.per , function(n, sub){ html += '<tr  name="'+i+'%'+n+'" id="'+i+'%'+n+'" class="'+i+'" onclick="showTablePart(this.id)" style="display:none"><td style="background:white;width:8%;"></td><td style="background:white;width:2%;"></td><td colspan="2" style="width:70%;background-color:#c1d6e4;padding-left:15px;border-bottom: 1px dotted blue;">'+n+'</td><td style="background-color:#c1d6e4;border-bottom: 1px dotted blue;width:10%;text-align:center">'+sub.sum.toFixed(2)+'</td><td style="background-color:#c1d6e4;border-bottom: 1px dotted blue;width:10%;text-align:center">'+sub.value.toFixed(2)+'</td></tr>'; $.each(sub.per , function(m, cell){ html += '<tr  name="'+i+'%'+n+'%'+m+'"   id="'+i+'%'+n+'%'+m+'" class="'+i+'%'+n+'"  style="display:none"><td style="background:white;width:8%;"></td><td style="background:white;width:2%;"></td><td style="background:white;width:2%;"></td><td style="width:68%;padding-left:15px;border-bottom: 1px dotted blue;background-color:#dddff1;">'+m+'</td><td style="border-bottom: 1px dotted blue;width:10%;background-color:#dddff1;text-align:center">'+cell.price.toFixed(2)+'</td><td style="background-color:#dddff1;border-bottom: 1px dotted blue;width:10%;text-align:center">'+cell.value.toFixed(2)+'</td></tr>'; }); }); });  html += '<tr><td style="background:white;width:8%;"></td><td style="background:white;width:2%;"></td><td style="background:white;width:2%;"></td><td style="background:white;width:68%;"></td><td style="font-weight:bold;border-bottom: 1px dotted blue;width:10%;text-align:center;background-color:#77B6EA"> = '+per.sum.toFixed(2)+'</td><td style="border-bottom: 1px dotted blue;background-color:#77B6EA;width:10%;font-weight:bold;text-align:center"> = '+per.value.toFixed(2)+'</td></tr></table></div>'; document.body.innerHTML = html;  } function showTablePart(id){  var tog = document.getElementsByTagName("tr");  for (var i = 0; i < tog.length; i++) { if(tog[i].id.includes(id+"%")){ if(tog[i].style.display == "none" && tog[i].id.split('%').length == id.split('%').length + 1) tog[i].style.display = "table-row"; else tog[i].style.display = "none"; } else if( tog[i].id.split('%').length > id.split('%').length) tog[i].style.display = "none"; }  }